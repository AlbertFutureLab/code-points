1. 类变量是共享的，任何一个改变都会影响所有的改变。类变量即便在对象本身内部，也是通过类名.类变量来范文。如Robot.name
2. 如果方法的参数中没有self这个参数，那么这个方法就是一个类方法。@classmethod
3. 任何在类或对象之中使用的变量其命名应以下划线开头，其它所有非此格式的名称都将是公开的，并可以为其它任何类或对象所使用
4. 果你使用数据成员并在其名字中使用双下划线作为前缀，形成诸如 __privatevar 这样的形式，Python 会使用名称调整（Name-mangling）来使其有效地成为一个私有变量
5. 这被称作多态性（Polymorphism），在任何情况下，如果父类型希望，子类型都可以被替换，也就是说，该对象可以被看作父类的实例。
6. Python要显式的调用父类的init方法
7. 果它找不到对应的方法，它就会在该类所属的基本类中依顺序逐个寻找属于基本类的方法，这个基本类是在定义子类时后跟的元组指定的。
8. Python 提供了一个叫作 Pickle 的标准模块，通过它你可以将任何纯 Python 对象存储到一个文件中，并在稍后将其取回。这叫作持久地（Persistently）存储对象
9. 那么将调用 Python 默认处理器，它只会终端程序执行并打印出错误信息。
10. 你应该如何确保文件对象被正确关闭，无论是否会发生异常？这可以通过 finally 块来完成。
11. 在 try 块中获取资源，然后在 finally 块中释放资源是一种常见的模式。因此，还有一个 with 语句使得这一过程可以以一种干净的姿态得以完成。
12. with语句会在代码块开始之前调用.__enter__函数，在代码块执行完毕之后调用.__exit__函数
13. 中间用逗号相连的两个值的存在形式是一个元祖。
14. 有一种特殊方法，即分别使用 * 或 ** 作为元组或字典的前缀，来使它们作为一个参数为函数所接收
15. python中可以将一个函数名作为变量传入一个函数，并且可以将函数名进行赋值。！！切记，无论是将函数名返回还是进行赋值，函数名都不能带括号。
16. python调试： import pdb;  pdb.set_trace()用来设置断点
17. Python中任意的对象，只要它定义了可以返回一个迭代器的__iter__方法，或者定义了可以支持下标索引的__getitem__方法(这些双下划线方法会在其他章节中全面解释)，那么它就是一个可迭代对象
18. 任意对象，只要定义了next(Python2) 或者__next__方法，它就是一个迭代器
19. 生成器也是一种迭代器，但是你只能对其迭代一次。这是因为它们并没有把所有的值存在内存中，而是在运行时生成值。
20. Map会将一个函数映射到一个输入列表的所有元素上
  items = [1, 2, 3, 4, 5]
  squared = list(map(lambda x: x**2, items))
21. 顾名思义，filter过滤列表中的元素，并且返回一个由所有符合要求的元素所构成的列表，符合要求即函数映射到该元素时返回值为True.
  filter类似于一个for循环，但是它是一个内置函数，并且更快。
22. for循环还有一个else从句，我们大多数人并不熟悉。这个else从句会在循环正常结束时执行。这意味着，循环没有遇到任何break
23. 如果一个类不继承自其它类, 就显式的从object继承. 嵌套类也一样.
24. 避免在循环中用+和+=操作符来累加字符串. 由于字符串是不可变的, 这样做会创建不必要的临时对象, 并且导致二次方而不是线性的运行时间. 作为替代方案, 你可以将每个子串加入列表, 然后在循环结束后用 .join 连接列表. (也可以将每个子串写入一个 cStringIO.StringIO 缓存中.)
25. 每个导入应该独占一行

